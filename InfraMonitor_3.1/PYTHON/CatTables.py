#!/usr/bin/env python
#
# CatTables.py
#
# Concatenates tables generated by InfraMonitor2.0 for multiple days (stored in
# separate directories for each day)
#
# Usage:
# CatTables.py -o <Output CSS db name>
#
# Example:
# CatTables.py -o TOTAL
#
# Stephen Arrowsmith (arrows@lanl.gov)
# Copyright (c) 2012, Los Alamos National Security, LLC
# All rights reserved.
# 
# Copyright 2012. Los Alamos National Security, LLC. This software was produced under U.S.
# Government contract DE-AC52-06NA25396 for Los Alamos National Laboratory (LANL), which is
# operated by Los Alamos National Security, LLC for the U.S. Department of Energy. The U.S.
# Government has rights to use, reproduce, and distribute this software.  NEITHER THE
# GOVERNMENT NOR LOS ALAMOS NATIONAL SECURITY, LLC MAKES ANY WARRANTY, EXPRESS OR IMPLIED,
# OR ASSUMES ANY LIABILITY FOR THE USE OF THIS SOFTWARE.  If software is modified to produce
# derivative works, such modified software should be clearly marked, so as not to confuse it
# with the version available from LANL.
# 
# Additionally, redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# Redistributions of source code must retain the above copyright notice, this list
# 		  of conditions and the following disclaimer.
# Redistributions in binary form must reproduce the above copyright notice, this
# 	      list of conditions and the following disclaimer in the documentation and/or
# 	      other materials provided with the distribution.
# Neither the name of Los Alamos National Security, LLC, Los Alamos National
# 	      Laboratory, LANL, the U.S. Government, nor the names of its contributors may be
# 	      used to endorse or promote products derived from this software without specific
# 	      prior written permission.
# THIS SOFTWARE IS PROVIDED BY LOS ALAMOS NATIONAL SECURITY, LLC AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL LOS ALAMOS NATIONAL SECURITY, LLC OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
# WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

import os, commands, optparse, pdb

def main():
	
	# Obtaining arguments:
	p = optparse.OptionParser()
	p.add_option('--outputfile','-o',default='NaN')
	options, arguments = p.parse_args()
	
	if (str(options).find('NaN') != -1):
		print "Invalid Arguments: Type CatTables.py -h for help"
		return
	
	# Defining output files:
	f1 = open(options.outputfile + '.origin','w')
	f2 = open(options.outputfile + '.IMassoc','w')
	f3 = open(options.outputfile + '.IMpoly','w')
	
	originFiles = commands.getoutput('ls *.origin').splitlines()
	originFiles.remove(options.outputfile + '.origin')
	
	EventID = 0
	for originFile in originFiles:
		
		dbName = originFile.split('.')[0]
		
		# Reading origin file and looping over events:
		fi1 = open(dbName + '.origin','r')
		for line in fi1:
			
			# Old Event ID:
			OldEventID = line.split()[4]
			
			# Define new Event ID:
			EventID = EventID + 1
			
			# Writing modified line to origin file:
			print >> f1,line.replace('%5s' % OldEventID,'%5s' % str(EventID)).rstrip('\n')
			
			# IMassoc file:
			fi2 = open(dbName + '.IMassoc','r')
			for line2 in fi2:
				line2 = line2.split()
				try:
					if (line2[2] == OldEventID):
						print >> f2, '%19s' % line2[0] + ' ' + line2[1], '%8s' % str(EventID), '%8s' % line2[3]
				except:
					pdb.set_trace()
			fi2.close()
			
			# IMpoly file:
			fi3 = open(dbName + '.IMpoly','r')
			for line3 in fi3:
				line3 = line3.split()
				if (line3[0] == OldEventID):
					print >> f3, '%9s' % str(EventID), '%9s' % line3[1], '%11.6f' % float(line3[2]), '%11.6f' % float(line3[3])
			fi3.close()
		
		fi1.close()
	
	f1.close()
	f2.close()
	f3.close()

if __name__ == '__main__':
	main()
